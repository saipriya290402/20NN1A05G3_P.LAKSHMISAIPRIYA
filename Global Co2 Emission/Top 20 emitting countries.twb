<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Co2 New' inline='true' name='federated.11z382s10i2o1919gzi5s03z3l8a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='textscan.021ur3v1sqmes812suma60qgnkbb'>
            <connection class='textscan' directory='C:/Users/saipriya/Downloads' filename='Co2 New.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.021ur3v1sqmes812suma60qgnkbb' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.021ur3v1sqmes812suma60qgnkbb' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_growth_prct:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:trade_co2_share:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2_per_capita:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Co2 New.csv' id='Co2 New.csv_5D1E44067F1B433EB4584005056BECF9'>
            <properties context=''>
              <relation connection='textscan.021ur3v1sqmes812suma60qgnkbb' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='China vs India Internal Factors'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</column>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]</rows>
        <cols>([federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk] / [federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{41B770FB-AECA-46BF-AB2B-FB0ACD1D0B3C}' />
    </worksheet>
    <worksheet name='Co2 Emission India vs United States'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]</rows>
        <cols>([federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk] * [federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{685A9A28-4972-4016-9DE0-FFF7854EEDC5}' />
    </worksheet>
    <worksheet name='Co2 Emission in 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</column>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{B82F6B7D-42D9-44E8-B8A9-51A8E5498DEC}' />
    </worksheet>
    <worksheet name='Co2 Emmission from 1974 to 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</column>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]' num-steps='12' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]' />
              <text column='[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]' />
              <lod column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{9F10B1C7-96C2-4046-AE86-A69C54CAD552}' />
    </worksheet>
    <worksheet name='Co2 emission per capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{E2774B21-5BC4-4C58-98B4-992BF335E81F}' />
    </worksheet>
    <worksheet name='Continent wise contribution in internal Factors'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]' pivot='key' type='quantitative' />
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
            <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Co2 New.csv' datatype='integer' name='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_growth_prct:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:trade_co2_share:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]</rows>
        <cols>([federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk] / [federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4D6EDF8A-9008-48E7-8ED9-39EC7EE5031A}' />
    </worksheet>
    <worksheet name='Cumilative co2 and co2 per capta over year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk] + [federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk])</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{EA01D124-5F57-4BF4-A203-42F2FAC19079}' />
    </worksheet>
    <worksheet name='Emission rate by Internal over Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#666666' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk] + ([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk] + ([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk] + ([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk] + ([federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk] + [federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{12B9BBCE-2499-45DE-9FC1-71A939AE295A}' />
    </worksheet>
    <worksheet name='Overall Contribution to india in co2 Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]' pivot='key' type='quantitative' />
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
            <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Co2 New.csv' datatype='integer' name='[__tableau_internal_object_id__].[Co2 New.csv_5D1E44067F1B433EB4584005056BECF9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cumulative_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_growth_prct:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[__tableau_internal_object_id__].[cnt:Co2 New.csv_5D1E44067F1B433EB4584005056BECF9:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:oil_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:cement_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:gas_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_industry_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:other_co2_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:trade_co2_share:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]</rows>
        <cols>([federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk] / [federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{FDFD426F-89D4-4FC3-970C-78CE4AE2555D}' />
    </worksheet>
    <worksheet name='Top 20 Emitting Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
              <lod column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:coal_co2:qk]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{B3D8D8B4-48B6-40E2-89FE-DA8BB004EC63}' />
    </worksheet>
    <worksheet name='Total Co2 Emmission over the Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' num-steps='8' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{F4248256-6F69-4B5B-AA4A-EDCC0AD77274}' />
    </worksheet>
    <worksheet name='Total Emision by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
              <size column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
              <wedge-size column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
              <text column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
              <text column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E852709B-5241-4D85-96C8-9005FBA1DED3}' />
    </worksheet>
    <worksheet name='Total World Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.11z382s10i2o1919gzi5s03z3l8a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11z382s10i2o1919gzi5s03z3l8a'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11z382s10i2o1919gzi5s03z3l8a].[Longitude (generated)]' field-type='quantitative' max='25904222.726857875' min='-16224873.406780167' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11z382s10i2o1919gzi5s03z3l8a].[Latitude (generated)]' field-type='quantitative' max='14011690.158736533' min='-10286975.851117913' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' />
              <size column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
              <text column='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' />
              <geometry column='[federated.11z382s10i2o1919gzi5s03z3l8a].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11z382s10i2o1919gzi5s03z3l8a].[Latitude (generated)]</rows>
        <cols>[federated.11z382s10i2o1919gzi5s03z3l8a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9F594DBF-CA58-4585-BEEC-BDE78B2123BA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Total World Emission' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Total Co2 Emmission over the Time' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Top 20 Emitting Countries' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='Total Emision by Continents' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='66750' id='8' name='Total World Emission' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22125' id='9' name='Total World Emission' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type-v2='size' w='16000' x='83200' y='67750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='11' name='Total Co2 Emmission over the Time' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type-v2='color' w='16000' x='83200' y='89875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Total World Emission' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='66750' id='8' name='Total World Emission' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22125' id='9' name='Total World Emission' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type-v2='size' w='16000' x='83200' y='67750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Total Co2 Emmission over the Time' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='11' name='Total Co2 Emmission over the Time' pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type-v2='color' w='16000' x='83200' y='89875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Top 20 Emitting Countries' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Total Emision by Continents' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A00C9C46-6062-4330-9138-6ED1B53B9914}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FA3E89C5-EA98-44EE-8BD1-B713A6EA96FC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total World Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C4FD31D-20BC-443B-A8A8-8E608A2A9A3E}' />
    </window>
    <window class='worksheet' name='Total Co2 Emmission over the Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B912943-E0F8-4CCC-98B1-6852FAD58668}' />
    </window>
    <window class='worksheet' name='Co2 Emission India vs United States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A15AABBB-0340-4C45-954E-CB669AC34934}' />
    </window>
    <window class='worksheet' name='Total Emision by Continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5848EBD-C5CD-4D86-A1D6-1106B4841C3D}' />
    </window>
    <window class='worksheet' maximized='true' name='Co2 emission per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3932C62-61E3-4C6D-ACC9-C4DCA3438EF6}' />
    </window>
    <window class='worksheet' name='Emission rate by Internal over Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7AC690E-604E-401C-B520-E59BB6765DFE}' />
    </window>
    <window class='worksheet' name='Continent wise contribution in internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4583CD22-9CD2-4198-83C9-E63845B74107}' />
    </window>
    <window class='worksheet' name='Cumilative co2 and co2 per capta over year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{471FDC61-A6E0-4CC2-8A0B-7C690851E69C}' />
    </window>
    <window class='worksheet' name='China vs India Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF945F6A-DDA7-4F61-B60D-871C3A789396}' />
    </window>
    <window class='worksheet' name='Co2 Emmission from 1974 to 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A44E877-9E64-462E-ABFD-93898E7AAC3F}' />
    </window>
    <window class='worksheet' name='Overall Contribution to india in co2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[:Measure Names]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0153E461-C69A-40E7-AF46-BE7A72377536}' />
    </window>
    <window class='worksheet' name='Co2 Emission in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{974C30E1-BBD2-481C-AA47-8F12153C4993}' />
    </window>
    <window class='worksheet' name='Top 20 Emitting Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBD313C4-05C0-4D39-8A76-F1BB4B603A4E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 20 Emitting Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Co2 Emmission over the Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Emision by Continents'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total World Emission'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11z382s10i2o1919gzi5s03z3l8a].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FB5180DB-7233-45FE-A11B-E4341C7BFA40}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{21D758F8-B932-4EB8-BCD1-DA2D5CAA19C1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='China vs India Internal Factors' width='192'>
      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
      8GoRr1MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission India vs United States' width='192'>
      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
      qBCH8P8AgALZya3byQ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission in 2020' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Co2 Emmission from 1974 to 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Co2 emission per capita' width='192'>
      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
      /X9ih9KCaxXewQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Continent wise contribution in internal Factors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cumilative co2 and co2 per capta over year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      To3PNv8fAkqa7bAAZkcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Emission rate by Internal over Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d53cb2ZXgf5ULGSAB5iCKUqvVSh3d7fbY45mdTd45e3bnT9zjL/thg3fO
      rGdmPd4Z22u3Q3dLLYndClRgkhhAgAhVqPj2AwiIAVCrKZEixfc7p4gCq+rVQ9W7992X7lWE
      EAKJ5JSivu4MSCSvE72z02g0iKLolSbueR6WZb3SNCWSV4lymCbQ1tYWuVzusJKXSF4aaQJJ
      TjVSACSnGikAklONFADJqaanAFSePOS//+0/4AYRCwuPel8pIm7dmiP0mtz66gblmsvmZpnN
      tae0wvgQsyyRvDp6CsD9xyv8q0+v8POf/x8eLSz2OEOw+GCeZhizvLDMuUtX2XiyyNLjeVbK
      dSxNIY6lEEiOPz0F4PLFC4RGnvffniRdGNl3XEQha5sVNleXqbseURQhAN0wiMMQObQsOSno
      vf6ZyBW59f9+Sd0TGKnBfccVzeCDjz5mo1ymkEly9943jJ05jwgcdCIcPyJt9UxaIjlW9C2l
      pmEQNJokzf4jucXBtnBcvHR5+z9y1PekEUcxURgReQFREBF4PoHrE7Tan77jtfdbPiJqm7Wq
      poGi7ErHsA2sTAIrZWOlbax0AsMy0CwD3dRR9px/XOgpADevf8E7H/4Zl+OAG1/NHXWeJN+R
      TiF2q03qq1XcmkMcRcRhRBzFxGFMHEZE299DLyD0AyIvJI5jNF1Dtww0Q0O3TIyEgWFbGAkT
      O5skM5THsI12wYf2lJk9EwgC18drtGis1yg/WsVrtNr38QJCP0TVVDRDRzM0VEND0zU0Q0c3
      9WeCk0lgJizsTAJ9+34duek3YWGXYO0RMhELRBy3n48fPstP8Gy/pwAMZEx+9j//F4YaMz57
      udcpkiNGCEHQamtk3/FwK01qqxUaGzWam3U0QyeRTZIZzpPIJlF1rb1pKqquou34rpsGmqlj
      2AaacfimqhCiXQiDkCiIiIO2MIZeQBSGePUWXsOlWa7jNVv4zRZBK0DEcVfO+lUgovtn1w4I
      UFRle1PRTB3d0DES5ragG+iW2X8uUBSFCAGapve9+bfxps0F6poLftjWqEFI0PKJwxhFU9va
      TVVRVBVFU1CU9hbH8TNtHDzTxFEQPtNMQTvdyA/b2tkP8V2v/b/t83XTwExaGEmTZC5FZrhA
      ppQlNZBB0dRja2YcBCHEntL9vN8mdvx9hoLSvazfs+kp/quL83w93+7+HJ44y8VzUy+W62NA
      58G1PwWCdlUIoq1NYkEctQthRxuFftv+9Z0WgRu0tdC27Ru2fEI/JGz5CGhrUkNDN/R2FW4b
      qJqKiEU7vThua65o+6XEMYqqdrWvZmg79nU0U8OwDOy03dZSpo5mtu1mI2GhmxqqrqPpbcE6
      LShKp/C+iFArO/5+N3oKQLZQ4vw5g61anUw6eYBkD48oCNlc3MDfrip9x2sXWNfHb7TwXa9d
      7fHsASoKu/ZVTWubBYbetkW37V8raWMkDLIj+bamtU1000C3jV02sOTNoXc3aDrL/O9/w/zC
      MmMzl5gYKR51vvribjk8nVvATNlYKZvMUJ6BpIWVtDBTNoZtoqjwrO7boR++pTqUnD76toAm
      Z97Ca3mks71seMHCg/usV2qMjw6xslqmUBpFi1uELZexs29h64dTXaeLWa789fcOJW3J6aNv
      Kd14soBipgjDsMdRhdGxMUzTprLlcvW9dwmcGk8X7+OSwNKUV766TCI5DPoKgKHrRHGMrhv7
      D4qY69e/YrBUopDSePjgIbFqUBydRvW38MIYTdrLkhNATxNo4eEDLn30Qy5HAY8XV3qcoXDh
      7bcJIkGuNEOiUSOdyRFHIZoCkbSxJSeEngLQqDzhlisYsHwWV5vMnj2z+wRFIZsvdL/mcnkA
      NLVdW5yezjrJSadnWb343vdJiTrrtYg/++T9o86TRHJkSK8QklPNS1srQsQsLS4QRIJWy8V3
      HfxILoaRnAxeeibU6uN5tPQAd+8/wNYjXMfn4qVLryJvEsmh89I1gONDaXAAQ4kpry6BmUKV
      vUCSE8JL1wCjw3lu3rhBaXSKdDoJgUfTC0nbckWY5PgjG8GSU82hOsd1HOeVpieRvGq6ApBO
      pw/lBrIGkBxnDmyoe40Kv/z9TT69cpb7yxvkBobRhEvoukyev3hos0ElklfJgUqpEDHzj1YY
      KeVZqzi8+967xF6D9eWH+FpazgaVnBgOpqaFIJWyKK+vYxkKc3NfI3Sb4ug0elDDCeRsUMnJ
      4KV6gaIoQlVVAt/HME2EECiAQEFVlRPVCySEaC9e37FFUUQYhkRRhKZpWJaFpmnouo56itbn
      vgo6z7Pz6fs+QRAQhiGJRALbttF1HU3TjnTF3kt11ne0vLkdBqmT8eMyDNaRbSFE96H7vo/n
      ed3PIAjwfb8rzIqioKoqqqp2C7uu64Rh2H1pHb+nlmVhmiaWZZFMJrFtm0Qi0fUG8SYsvRRC
      dJ9jHMddhdApzDu/d/Y7z2jnMSFEt3AbhtHdVFWl0WjQarUIwxAhBJZldZ9l510Au55rt6zt
      ec6dd9hRaJ18d35HR7l1hK9nDRD5Dg+XN5g9M0WjUSOTyR7o4R1FDdAp3K1WC8dxcF23W9CD
      IOi+PEVRuoXVNM3uvmEYmKaJrn8372VhGBIEAa1WC8/zcF0X13XxPK/7sjsvsSNEmqZhGMau
      WkTTtFdem3RedBiG3S0IAoIgIIqinoVHVVWEEIRhuE8xdNLcmd/O79n5Ozq/c+//NE17YZM4
      jmNarVZ36xTYzrFOQd5ZbHc6Yt653xGGjlLb+WkYRvud9xKAzz/7FX4QEqfHMcMKH330yd5H
      zNOlBWqeYGZqlIfzDxk7M0vsu6hxiJHOY+nqoQhAEARsbGzsKuyKopBIJLpbp4CbprnrRx8F
      nZcThmFXIPYWxI5W7GjROI73abdOfnfWYjv3vy0POwtf52V3PjuFZK927xQM0zT3KYY3pUbb
      S08TaHx4GLU4zcqt37HS6u3vM18covbgHvfuOIzPnmXh0UMMNcTzFS5dKnzrSzoonWo1n88z
      OjrafUnHhU5B6Qjgi7JXu+2suXZq7J2f35YHybfTs+SMzFzg3q3Peby6xczF93qcoRC0mnhB
      TEyMbVloKtQqZczMKMChxQdIJBJMTEwcStqvE9mofj30feprG5u8c/ki5bUn+w+KmI31Mmgm
      Z2cmuHPzBoXSGFNn32a8mKTpRbIbVHIi6NkG2KpsYtoWiwuLpHJFxg/oGOskdYNKTic9a4B7
      d24jtATnzp3l4fy9o86TRHJk9GwDXL16hb//3z8jFCqf/vlf9rww8Fo4fkg2naJeq5HKZBFx
      iNL2IIumykaY5PjT0wSKo4houxGrqCr6Pnte8GR5ic3NMraVJNIN4ljFVANajsv5i5cxtJM1
      Eiw5nfSsAZbmb/P7G3cAmHrrCh9fe3vPGQpJ26RipokRnD07w4O799hYXSBVOoeuIifDSU4E
      PdsAcRxRKhW3B216dGeKiLm5O4g4YiCX4Ksvr2Mks4xMniOlujRkL5DkhNDTBApbdX7+83/A
      jTT+4l//W0q5g8UIkCaQ5LjT0wT68ssv+Iuf/GeSWsBvfvcFpR9+etT5kkiOhJ4CMDMxxt/9
      7f/AAM5dlb74JW8uB14PsLm2Qs1XmChm+PrOPKNnzqOEDoQBqcFh7EOaDCeRvEoOPAElkSng
      1issLa5w/spVyk+XWHx0nyeVJpamHNpcIInkVXJwAUgkANCU9hTlWICdSBAH7WiKcjai5CRw
      wHnE7RhhrZbPxOQUy/P3GT9zDhE46MS4fkTKOj5TlCWSfkjPcJJTjZyELjnVSAGQnGqkAEhO
      NYfmHFcIgeu6ryw9ieQwOKBzXEF5tT0QdmZ8mMePHjE+fZbAc9GIwUxiqO2uUNkIlhxnDtgL
      JGg2HZ4uPCCINYoTE6w+WcU2BI7jc+nyJVRFrgeQHH8O2AZQCL0G1aaPHyvkshkMFcqryyhG
      EuXY+IaTSJ7PwUarRMxmuYpuGIyPDHD7xg1KY9NkMimU0JchkiQnBjkQJjnV9F4RFoVs1RoI
      AZ7nHXWeJJIjo6edcuuL3/FoaZXpK9/Hryz28A0qkbwZ9KwBspkcn/zVX1N78AXLZdmXL3lz
      6VkDnHn7Kjf/9BvKTsjozFiPM9qzQdc2a4yPlHiyvkm+OIImWoSuy/jsBRkjTHIi6FtKm02H
      XC6H22z0OKowOjaKadlU6y2uvfcuoVtndXGelpKUMcIkJ4aeNcDakyd88MO/Imw5bFZ7CICI
      +eKLG4xPn8WIXO7dnwfNpDg6jeds0QpjEoZ0iyI5/vQUgJWFe0RWiqweMv/gEeNjI3vOULh0
      5QphJMhkh0k1myTTaeIoQlUglgNhktfM3pBIOzfXdanValQqlT6uEYMWv/7Vr3AjjU//7Idk
      ky8e6GEnchxAIoToxmTbGWets+/7fjeijhCCIAgAunHGOrHcOtGAPM+j1Wrh+343DFQvgiDY
      FR5pZ4ikRCJBNpulUCj0HwjzPY8o9IkUk3Syd5SYb0MKwJtPHMd4nofjOGxubrK2tka5XGZ1
      dZV6vU6r1eqGZ9oZdqmz34miYxgGiqJ0o/10Auh1Yrolk8nu+bZtY1lWN1ZZL/ZG8ty5Rn3X
      fj8B+P3vf0u1vI6RHuIvf/T9Az0cKQAni52RHX3fp16vU6/XqVarOI7D1tYWzWazGxDQdV3C
      MMQwDNLpNPl8nqGhIUqlEqVSiVwu1w1/elzpm7OhfJpUYYRswj7K/Ehegs4ajCAIdmnbvfi+
      T6VS2aWt19fX2dra6mpV0zRJp9Nks1lyuRyJRILZ2VnS6fSukLCWZZ1oDyB9BaBaqfDl7d8x
      deEDpiZ7jQVIjoIoirqNtmq1SrlcZnNzk2q1iuu63fi6neiTtm1jGEbXvo7juGsDd0KhxnFM
      oVDoausrV65QKpUoFAq7Imqe5IL9ovQVAC2RY2xoECXu3Z9fXl2i6ilMFjN8c+8BI1PnUEIH
      Efhkh8ZO/EBYJ/7wzvCmnUZYJ45uJ0bwzji8nQbezri8O+PpdmzbTuzczvk779EJoVqv13Fd
      l0Qi0TUxBgcHmZ6e5vLly6TT6V1xiDt29N7fsbMHpBOI+jQU7hehd3yARw85OzPB/Px9hgZ7
      xwdL54usPXjAitfkwpVrPL5/j1pllUR+jNLo8RkI21m4dsbudRxnV0Bmx3FoNBo4jkO9Xsdx
      nK7W3Nto62hZ27Z3xdRNJpO7oqDvjDLfiQm8N07wzhi+O6/TNI1UKkU6nX6pCJKKonynQNWn
      jZ4CsLq6TLZwkR/8+K+4+/UcMLvvHMtqtw10FVotjzCGXGEQt9VCcHhhPx3HYW5ujnq9TqPR
      oNlsdgtup6uto713BozuFDLbtrv26879gYEBkskk6XSaTCZDMpnsGbha8mbRUwCuXHqHv/vH
      f0ag8NEP/qLHGe25QL4fkp8+w8riI6bPzBIFLoZyuJ7hXNdlfX2ddDrN2NgY6XS6qyk7hXyn
      zSsLruR5yAUxklPNyW6pSiQvyUsLQByFzN+7RyuI2rZ4fQsvlK7RJSeDlzbUnzx+QGF0nPn5
      B9hGjOOGXLr0zqvIm0Ry6Lx0DeBHCulk2xHW5toK6LZ0iyI5Mbx0DTA2WuTrmzcYnjhLLpdB
      jQLpFkVyYpC9QJJTjewFkpxqDmSnxHEEqKiqghAxXstDM0w0VQEEKCqqHICSnAC+ew0Qh3xz
      4488eloDoLH2iFvzS9SbLo8ePeDO3BxBdGhW1bdnL5JdsJIXp/ea4Adz/OrzO/ybf/8TNlYe
      8tZbbz87qOrMzEyx6mwnkMiTYIWnaxs01h6TKp3DPGKvEEIINhfWuf/r2ziVBqquolsGpm1h
      ZWwSuRRW2sZM2gQtH6/u4jVb7a3uEkcxcRiRGc4zfuUMA1MlNEM24k8DPd/y0/UqP/l3P+Yf
      f/63pAcGdwlAHPrcf/CQsp9lMDXZnnyGQFUUhsZniLwGDS8icwS9QEIIqstl7v3LLUI/5K0f
      X2FweogojIj8gKDl06q3cLeatGoOjfUaRsLEyiTIDOexUjZm0kIzdVRNZWtlk+Vbj5n7xy8p
      TBQZv3qGwkQRVZNNpTeVnr1Aodek7oY8nr9DqjjJ+enRAyV+mL1A9fUt7v7zTfxmi3M/vERp
      9mB57EXoBazPP2Hpq4e41SZD58cYv3KGzFD+ld1Dcjzo2w36m3/+R0qjk6ys1fiLH358oMQP
      QwC8Rotv/uk6zc065390meLMCIp6OA1uIQShF7J2b5lHf7wLwPjlM4xdnsY8oKMAyfGirwDc
      vfkn7i+uMX72Ha69feZAiR+GADQ36zQ2apRmR4/UNBFC4FQaLH75gLV7y6SLOaY/PEdhsiRN
      pBNMTwG48/Vtzl54B52I21/f5fIB5/a8qQNhcRRTfrTK0vUHbD2tMPPxBaben0U5pEVAksOj
      Z0vVFC3+77/8hrQeQbL3ksjTjKqplGZHKZ4dwXc8vvmnGzz5epGrf/09koXvEmxQ8rrpawJV
      NlZpRSojQyWeN6YVBR43v77L1StX2CyvQ+iTLo5i6+obWwPsRQjB2t1lvv7FdWY+eZup92YP
      rV0iebX07assr61w7/EThGLwZ3/+Y7IJo+d5sRCYhooQsPDwLlZmhMHh47Mo/ihQFIXhCxMU
      JkvM/cMXrH6zxNX/+DF2JvG6s3asEEI8G6jc3lc19bWOufS989ONCt/7+CO+un6dW1/d5NOP
      3+95nmHa6NvaLpXJ4vneoS6KP86YSYtr/+kTVu8s8/uf/pJzP7zE2KXpU7suWcSCh599w+PP
      7wMCULodBoqioGgKIhKgKiRzKdLFLJmRPJliDjubxEiYh/7s+ppAG8sP+fzmHc5ffId0usDQ
      YKZnAs2tTe49XGBgaIxc2sIgRlgZUpZ+akygXrTqDrf+7k94zVZfDacZGulSjsJkkfzoAGbK
      fmN6lOIo5s4vb+BUGlz7T5+gm70tiHZXc9AdqKytVmhs1HBrDpEfops6mmmgWzqaoaNbRnsz
      289UxDFxLBDRtt+jWBAHbetDURWUHc9T05+5hmkPlobPGQf45d+x2YiYmL3I+5fOH+ghnGYB
      6NCqu8R9zMEoiKg9rVBdLlNdLhO4PulSlvz4IPnxIvnxwe6LPknEUcSNn/0e3dS59JMPD2wN
      xFFM6AXtzQ+JgrD7PfAClO0apVPQVVVBUVW07dgUHcHoEIXP3oOma2im3t8EisMQPwiJ5OSy
      l+Lb2gGZUo7xK2favoyCCKfSoLK0wcqtR8z9/eeYKYuB6SGGzo2RLuWOvUAELZ/r/+N35EYL
      nPvR5ZcyhVVNxUxahzro2PNpPvrmS2Izi+89IQhPT2P2daIoCrqpkx3Okx3OwwfniOMYZ7NB
      +fEa938zR7NcIzmQpjgzQrqYxbBNNFPHsA0M24SuEy+6+y+LiAWhH1Bfq2JnkySyqb49XF7D
      5Yv/9ltGL04y/dH5E9H26WsC3Zm7zezFd9Bf4kdIE+jVEkcx9bUq6/NPcbeaBC2fyG+bBYHr
      t09S2sKk6hqJXJJkPo2dS5IspLEzScyU1barDb1nARVC0CzXqS5vsLmwwdaTTUQckx0u4FQb
      hH5IfnSA0rlRBqaHsFJtD4FOtcnn//VXnP30IuNXzhzhU3k5+grAZ7/4GXMrDa68+yEfXb2w
      65jbbKAYFrZpEEch1eoWdiqNoauoQoBmoKmKFIAjRAgBYjs0UBwTeiHuVhOn0sCtOTiVBq26
      i99sEQUhURBtd0FqO+xmhVbdIVlIkx3OM3hmmNzoAIZtoqhKt8FaXS6zdm+FyuI6qq6RGxlg
      /cETLv/kQwbPDJ8Izd+hr0GZHRzGelrF3RMpPvYb3HmwgCIEV69corH+mKWazhk7ydOVRVqO
      y/mLl5GuWI8WRVHa2h8FtvvWrbRNfnyw5/mdPvkoiNo9KUHbea+Vtvv22CiKgmGblGZHKc2O
      IoSgVXfZfLzG9IfnSJdOnrLrKwBurDGYT+M7u6NE+k6TgeExgtoaMWBmiljVJywsreBstBfE
      6CqnaiDsJKIoSrsnRD+4qlIUhUQ2eaJMnr30FAC3WWd0ZIzBgQES2d1zgaxMns0bt1GtFE59
      izDwCMIAM5UmO3mO2HePbEGMRPKy9GwDLM7PcefBEpFQmJh5i0vnpw+UuGwDSI47veMDVGp8
      cvUsC16Od6ZKR50nieTI6CkAhYTOz37xGbFQqL7zHp++L319St5MpGc4yanmzZh5JZEcECkA
      klNNtw3QaDReed+94zivND2J5FXTFYB0+nDWsso2gOQ4I00gyammpwCEbp0bt+8QC0GlsnnU
      eZJIjoyeAvDFl19Aq8y//OEW9+/fPeo8SSRHRk8BmJmYYPStDxjWa1TckzO1VSL5rvQUgNLU
      LOX5L7m7uEZxUDrGkry59G0EV7fqTE1PUavKNoDkzaXnXKDN9XXe//6P2NzYYFjpvTjiGYIn
      D74mzE1jRQ1E4JMbHsfWZQeT5PjTs5Q+uD+HL3SGh4rMz99/bgJ+c4um61J3Ah7Pf8NGI8A6
      4ggxEslB6VkDvPfBh/z93/8tfqzyo3/1r5+bwPr6Bl7LZd1bY7I0TNNxEICmyUWRkuNP39mg
      m5tlBgYGqFSqFAqF56cSuFR9DS32MNSYSE+des9wkpNBzxrAq63xX/7LT5mZmaU4PsMPPvwW
      ATAS5A0A89XnUCI5RHq2AcxMib/+N39JJpOhIDW45A2mZw2gKAoblRrn33qLVFoKgOTNpW9f
      ZS5lcevWLZaerh9lfiSSI6WvAIRhiJ5Io0Vev1MkkhNPX+c9YRTx6Juv0C5/yqWjzJFE8oqJ
      45ggCAjDEM/z8H0f3/eJoqi/AFimydDIJAMDz28DtBpV5h8vMzA0hqXFEAYkB4bkSLDk0HEc
      h2q1Sq1Wo1wuU6lUqFarVCoVtra2upvjOOi63t1s28Y0TTRN6y8A9abDyOgomdTz/dsbiQyz
      ZyZ4tLKJ31hHtQtcKg0TxzKuwJtCHMd4nkcQBF1NGoYhQRB0NWoYhvi+jxCiq12DIADA2/Yv
      G4YhURQRRRFhGHaP+b5Pq9XC8zxc18X3fRzHIQiCtkPeMCSOY6Io2vVp2zb5fJ5sNsvg4CC5
      XI6BgQFmZmbaPZiFArlcjlQqte02vj2zeafz3r4CEKEwNjxMOpN67sPxnSoPn2xx4dwMd+aq
      hGHIoflZOcUIIeiMWe7c70Ucx/sKzN7C5bouzWaTVquF67rd741Gg3q9juu6OI7TPW4YBpZl
      YRhGV5MahoFpmliW1f2uqiqmaXY/ASyrHeBC13VUVUXTNJLJJACmaWIYBrZtk0gksG0by7JI
      JpMYhtH2Yapp3a1zvaqqryQOXV8ByCUMPvvsD5x75yrFQn8zyG22iMMWqxsVxibOoBPh+BFp
      6/X6BhVC0Gq19m21Wg3XdanX69TrdRqNBo1Gg2az2dVYHZuxg+/7+9L3vP2dA7qu75oCoqoq
      ur77OXQKyd60OlrO9/2uxt17752a63kvX1GUbgHpFCDLskgkEpimSTKZJJFIkEqlsG0b27Yp
      FotMT0+TTCbJ5XIkEgmSySS2bZNMJk+Uy/PvQt9SWq07DI6UiN3acxMYGBlnYGT8lWesH48e
      PeKnP/1pVzt1qt+OputUr1EUdV/uzi2bzZJIJMhkMmQyGYaGhshmsySTya7G2llwFUXp/n8n
      Ha22kyAIdpl+ewUJ6OZ1Jx0t+Dzt2cnLi7K3un9TC/DL0lcARoaH+d0fP2fggx8fYXa+nZGR
      Ef7mb/6mW6ANw2g3Zra1b2fT9d4RUCSSnfScDPfN7ZvMXryMTsStuTtcuXywjlA5GU5y3OlZ
      A9hqwC/+6Z9J6hFmbuy5CbTqm3wzv8DQ+BnUyCX2PQbGpmQ3qORE0FMAzlx8n4HRTfxYZbCQ
      f24CT56WuXTtGg/v3WervExyYJpRWfglJ4T+McLyAy+UgKUJavUGQQwDQ6M0Gw1iIdCk/S05
      Aby0e3QRRzx6+JCx6bNEvouhCgLFJikXxEhOAF0B6O0cV+D7Qc9uwBfBcZzugIdEchx5rnPc
      KPC482SNd95+68A3kDWA5DjTt7XaHqwR3TkbHVquSxQLAs+lWmsghKBSLhNGAs9tstWQLtEl
      J4e+bYA//PqXTF/+iIF0AsNoVxSx7/LZH//I5Q8+ZeneHJqmYtsWvmYTtFrELRcBvHX5Mpam
      yjaA5NjTtwbQNPjsV7/kD9fnnp1sJpgaHwZiDCvNyOAAG+UmE1OTGIqHlcgznEnjbk9LkEiO
      Oz0FwK+X+cONOWzbIgieTcby3ToLi09YXHqKGjvMr6wze3aUr69fR0sUiYMKi7Umme3pCBLJ
      caenCSTiiIcPH2DpKkqqyFjxYGaMNIEksevhfL2AlkuhZ5No2RSKrqFox2OwtLdXCFVjZWWJ
      ra0GmdwgYz/89KjzJXlDcOYeEwchbDXxHq8S1R2IBYptoOczaJkEqm2imgaKpaNoGoqpt78b
      +qELSt+R4KmREpXBMbLpzKFmQPLmIsKI1uNVBv7DJ6hW28myEAJiQex6hNUGUd0hariEXo3Y
      DxBhhPBDRBAS+yEg2kKhqe1Py0C1DVTb3BYQDTS1fVzXupuIY2LXJ3Y9hBcQuR6i5bfTjGNQ
      2+f3FYAgjNh8+pRVNc3M1PMnxEkkvfBXyhilXLfww/a6BE1BSyfQ0s9fbgsg4rgtFGEMUUTs
      h8Sej3B94jCEMEZ4AXEUtc+L2ucrioKasFATJtpABjNRRLUMFNMAVYFYIJ63KN5t1tmsbDE8
      NfRqnobk1OHeXSR5eeal0lBUFcVUu143X3XXSk8Da/HeTa7feQQIBHJSm+S7EzVdIsfDGPoW
      v7KvmZ4CMHn+CtNjQ3z8yccETv2o8yR5A2jNP8GeHUNRj7cC7dvEvnr5Ete/uM7Z8wefByQ5
      nYg4xr2/TOLs6OvOyrfSVwC+unmT0tAQUbjfI4JE8jyC1Qp6IY1iH393+T0bwUCz5p8AAAme
      SURBVEIITE1hYXERJZFndmr/OY8f3KXpw9mpMe7dn2do/CxBbZVaoHDx/Fm5IP2UIoTAvbtE
      4vzEiSgDPWuA5QdzPK22MA0DrY//mVqtBiisLS0z885VtjYWcHyNvCZohHIu0Gkldn3CzTrm
      2MkIr9uzBpiYvcTYzMV2F1TPywTnLlxma3WRtWqLlO8TxYAI8BGoyvMdN0neXLzHq1gzI8e+
      8duhbyn9/Le/olxzCPto8trmKrXI4J1LF9lceMD41DlKAylEIkNS005E9Sd5tQghcO8vYZ+A
      xm+HvgNhyYTG//7Zf+fC1Q/5+Nrbe44qDI9PM7z97fzbF9s7qXFORsUnOQzCjRqqaaBnn+9P
      9jjRtwaoNT1GpybRguZR5kdyQmk3fhdJXJh83Vn5TvQVgOLgIE8e3kNY2aPMj+SEIoIQ/0kZ
      a/JkTZ3pKwDNRo1UpgBC+vmXfDvewhrW9PCxmef/ovTM7caTBe48fMLY+DiFnJwOLXk+Qgjc
      e0vYs0fnJfxV0bMRnMzkuHrtKtlsljCW4S5OI92FgrFABCGR49Ht2FNVUGjPxQeihgtCYAyc
      PGXZUwA0EfCLX/wfzp49R6Y4xvTki0i2YP7OHHVf5erlt1FlN+ixRoh2we4sGomaLWKntf3p
      ETut9hx8EYOuoSUsOhIgohiEaH8CRDGpD86/xl9zcHoKgJHIcvnCeYSV58P3rrxgUj6xkmY0
      FdKIYrL64SyKF7EgbnkgACG6L0LEor3S54XSiNkZx0nsHOvYfrlsJ0/nJatK277trDxSn61C
      QlFgp8Dv2N81ILTznM7/t38DYlvr7vpdEcTt/Ikohs7ikChua+Y4hihuF+bOufH2eVEMnQUi
      Udw+vr1YpLPaSjE0VHt70UjSRk0nsAoZ1ISFlrK7K63YEV/rTaOnANy+/gfGzl8lowf88Y9f
      8Oc/+N4LJeV5TbYCQe4QH1a01aD2u7arlm7h0rT2/guOPrYbajsK6Q5hVdQdhXlHNS/iTiET
      iDBsF7BOgeoU3A47/QzsOCb2/V9sCw8oivos/4rS/T2Kui1028sCu8v/Ov9X1WfCqYKqGc/O
      2b5u15JBTW0vJTT19rWnnJ4CkMtkuD53E0uNyY/OvmBSGjPTIzR8FfsQewL0QoaBn3x8aOlL
      Thd9neO23CZRrJBKHdy5rXSOKznuvLR79OdxUL9AURQd2LHWQa896HWdgHcHmfz3MnntRIA8
      7vcUQhDH8bF9J683lmkfXmYm6UGvPeh1L9M4POq8npZ7fpd3ciwF4GUK1UGvPerrTss9j3te
      j4UAPPzmOmFqjJRosLFZZXB0klp5nY3NGp/+4Hv84de/5vLHPyCzJ/i2U9vki68f8IMPr3Dj
      xm2EkWB8MM3TJ8vYxTOE9TUSuRIzk7un58a+w2d/+pJ3P/yYhbtzNP2Y6ckx1tbXaYVgxh5u
      qPLeB9fQ9zzMp0uPWKv7TA6kWFwtkyoUcTef0gpUZqZKLKysUxyZYnJkd4ipsNXgt5/f5Puf
      fMS927dxQpgaybOysUUmX4JWhUrN590P3933UpYf3aPq6wxndFbWN8kWR6itLuHHOu+9f5Xb
      n/+Oodl3GSnsbm/5To3ffjnHjz/9kJtf3aIVa0yV0jzdrJEbHMXfWkVJ5Dk/s38C28L92zha
      noIRsFquUhiZoLz4kEizGSokqNQaFIanmRze7fVh4+kSC2s1LkwWub/4FDuVA69GoxUye2ac
      B49XyBdHODs5svudBC3+9PnnXLj2MasPv6bRChgbGWZ1o0wqV8SIGmxsNnjn2jUSxm6zaG1l
      gZWKw9nhHA9X1klmC4SNCk0/5tq1qyze+QKRPcfsxO54d7Hv9J8LdJRMTk0j4gjXbZHNZ1hb
      rXLh3DRDI2OsLz0iky/Rq6mSzA4wmEshIo8IE79aJTs2QTpbYCgj2NxqUa/V2DuYrZpJJkaK
      xHGEF8YYkU9kZShlbKbOniMIAoIw6LkYaGTiDIYS4bguyUyWzbU1wu3zK5tNLl+7QqtW2Xed
      bqcZLeUhDvEjUF2HLc/fDuodMzE+gWVbPV/I2OQZVEIcxyWVybLxdJUwCPCDgMrqEonMAFG4
      fwzETGYZHsxBHBBEKmJri3rcCSTeYGW5QrO2RdijFTg+eQZFhDhui0wuw/qTNcKw/TvjKCQK
      g57DLsWRCRKmguM42MkMlY01PD/CViLu3Fnm4rvvErn7PY2ohs3UWIkojvGCEFsTLKyskcpk
      2VxfY3x8AtOy0Hp0dQ+NTWFpgqbjkExnqaw9wQ9jjMBjcWUJPZkhCML99zSTx0EABI1ajUaj
      wdDoOHEQkhvIs7CwxNT0eNtD3foKa+Xqvit9z6XRaOBGJmPDWfRUEj1wCbBIJ9OkM2l0EewT
      gCj0qTcaNB2fibERYl0nbWlsNCMGkwKhJcmbKs6+tUCCZr2d10JxGFOJSaUTxGqCvK0Ra4KV
      5RVibf9i8CjwaTSaNNyI8bESwraIXY/R8XG8Zo2bt75mbKyXBz5Bo16n0WgwODyCTkQmYyP0
      FFlDYcuLqG6usrZR3ndl6Hs0Gg0aHkyMDqKkkkSNFmPjY7iNgNxAmoQmCPYVZEGjXqNRr1Ma
      GYMoJJM1wciR0gTlhs/4+CjNem3fPd1mg0ajQapQJGkqpLJ5JsZHiRSVseEMy4vLBPH+QhxH
      AfV6g0azxfj4GJFQmJ09i6kKUpkMN2/eZmRsrIcACJxG+/nkBoexNEEyN8j42DCxYWAgqFU3
      WV3f2P9OQv849AIJ1p8+JRBQyOeoN1uUBgv4vodl2QAEvo+qG/t+vNuoUak1SKazxL6DnSlg
      azGhYmJqCs1alUizyKZ2u+ALfZe1jQqGlcDWBbFmk01a+GGMZRo061W8SKWQy7LbAhJUNtZx
      /ZB8oUC9Vqc4VKLVqNEKFQbyacobZQqDxX15DVoO65tVTDuJqURgJknbBusbZQqDg1TX14lQ
      GR4d3qOVBOX1Nbwgat+z3qBUKuHUK/hCZyCXaWtjNIw94Wk9t0m5soWVTKPFPrqdJmlprG9s
      MlAsEbaaeJFCPrs3PJZgY20VP4wpFArUG02KxSLNrU0i1SSTNFkvVymWSuh7fudWZYOm65PL
      F2jUawwUS3iNLULVJJdOslneIFsYxNgzVhQFHqvrZTTTJmWqhBhkUybrGxWKpSKVjTX8EIZG
      hvfcU1Atb+B4wfY7qTFYGsKtVRC6TTadRMQhfgiWudu4DH33OAiARPL6OAYmkETy+pACIDnV
      SAGQnGqkAEhONVIAJKcaKQCSU40UAMmpRgqA5FTz/wGcomNLhuc5oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overall Contribution to india in co2 Emission' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 20 Emitting Countries' width='192'>
      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
      hKv9Pz3PXDmHo5GIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Co2 Emmission over the Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Emision by Continents' width='192'>
      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
      B4+NZOlHHN4vAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total World Emission' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
